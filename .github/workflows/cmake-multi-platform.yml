name: C++ CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        generator: [Ninja, "Unix Makefiles"] # Można zmienić na inny generator dla większej kompatybilności

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up C++ Compiler
        uses: actions/setup-cpp@v2
        with:
          compiler: clang++ # Lub gcc/msvc odpowiedni do środowiska

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt update
            sudo apt install -y cmake ninja-build libsfml-dev
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
            choco install ninja -y
          fi

      - name: Configure CMake
        run: |
          cmake -S . -B build -G "${{ matrix.generator }}" -DBUILD_SHARED_LIBS=OFF
        env:
          CC: clang
          CXX: clang++

      - name: Build
        run: |
          cmake --build build

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install python-dev-tools tensorflow==2.18.0 pillow==11.0.0 numpy==2.0.2

      - name: Run Tests
        run: |
          ctest --test-dir build --output-on-failure

